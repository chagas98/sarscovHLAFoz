cols = contains('.rank'),
names_sep = '.rank',
names_to = c('alleles', 'rank_type')
) %>%
dplyr::mutate(
rank_type = case_when(
grepl("_refseq", rank_type) ~ 'rank_values_refseq',
TRUE ~ 'rank_values_mutant'
)
) %>%
tidyr::pivot_wider(
names_from = rank_type,
values_from = value
) %>%
dplyr::mutate(
rank_mutant = case_when(
rank_values_mutant < 0.5 ~ 'SB',
rank_values_mutant >= 0.5 & rank_values_mutant < 2 ~ 'WB',
rank_values_mutant >= 2 ~ 'NB',
TRUE ~ 'NA'
),
rank_refseq = case_when(
rank_values_refseq < 0.5 ~ 'SB',
rank_values_refseq >= 0.5 & rank_values_refseq < 2 ~ 'WB',
rank_values_refseq >= 2 ~ 'NB',
TRUE ~ 'NA'
)
) %>%
dplyr::mutate(
alleles = gsub(".binder_refseq|.binder", "", alleles),
alleles = gsub("HLA.B.", "B*", alleles),
alleles = gsub("\\.", ":", alleles),
impact = case_when(
grepl("NB", rank_refseq) & grepl("SB", rank_mutant) ~ 'Gain',
grepl("SB", rank_refseq) & grepl("NB", rank_mutant) ~ 'Loss',
grepl("NB", rank_refseq) & grepl("WB", rank_mutant) ~ 'Weak Gain',
grepl("SB", rank_refseq) & grepl("WB", rank_mutant) ~ 'Weak Loss',
TRUE ~ 'No Effect')
)
impact_dataset_deduplicate <- impact_dataset_all %>%
deduplicating(data = .,
columns = c("sequence", "length",
"pos", "gene", "alleles"))
impact_dataset_gain  <- impact_dataset_deduplicate %>%
#dplyr::filter(
#  if_any(contains("impact"), ~ . != 'No Effect'))
dplyr::filter(impact %in% c('Gain', 'Weak Gain'))
impact_dataset_loss  <- impact_dataset_deduplicate %>%
#dplyr::filter(
#  if_any(contains("impact"), ~ . != 'No Effect'))
dplyr::filter(impact %in% c('Loss', 'Weak Loss'))
impact_dataset_noeffect  <- impact_dataset_deduplicate %>%
#dplyr::filter(
#  if_any(contains("impact"), ~ . != 'No Effect'))
dplyr::filter(grepl('No Effect', impact))
impact_only_loss  <- impact_dataset_deduplicate %>%
dplyr::filter(impact == 'Loss')
impact_only_gain  <- impact_dataset_deduplicate %>%
dplyr::filter(impact == 'Gain')
impact_only_weakloss  <- impact_dataset_deduplicate %>%
dplyr::filter(impact == 'Weak Loss')
impact_only_weakgain  <- impact_dataset_deduplicate %>%
dplyr::filter(impact == 'Weak Gain')
mutation_dataset_spike
mutation_dataset_spike <-  mutation_dataset %>%
filter(gene == 'S') %>%
mutate(prot_pos = as.numeric(map(variant_protein_sorted, parse_number)))
mutation_dataset <- impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
group_by(pos,gene,variant_protein_sorted) %>%
count()
# Plot
fig2A <- ggplot(mutation_dataset, aes(x=pos, y=n)) +
geom_segment(
aes(x=pos, xend=pos, y=0, yend=n),
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
linewidth=ifelse(mutation_dataset$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
#  geom_text_repel(data=filter(mutation_dataset, n>10),
#                  aes(label=variant_protein_sorted),
#                  max.overlaps = Inf,
#                  min.segment.length = 10, seed = 42, point.padding = 3,
#                  max.time = 1, max.iter = 1e5,
#                  direction = "x",
#                 color='orange'
# ) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(breaks=seq(0, 30000, 5000)) +
ylab("Frequência de Mutações") +
xlab("Posição (Nucleotídeos)")
fig2A
mutation_dataset_spike <-  mutation_dataset %>%
filter(gene == 'S') %>%
mutate(prot_pos = as.numeric(map(variant_protein_sorted, parse_number)))
fig2B <- ggplot(mutation_dataset_spike, aes(x=prot_pos, y=n)) +
geom_segment(
aes(x=prot_pos, xend=prot_pos, y=0, yend=n),
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_text_repel(data=filter(mutation_dataset_spike, n>10 && !(variant_protein_sorted %in% impact_only_loss$variant_protein_sorted)),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
direction = "x",
color='orange'
) +
geom_text_repel(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
aes(label=variant_protein_sorted),
color="red"
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=13),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
plot.margin = unit(c(7,6,5,6), "mm")
) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(limits = c(0, 1273), breaks=seq(0, 1200, 200), expand = c(0,0)) +
ylab("Frequência de Mutações") +
xlab("Resíduos")
fig2B
mutation_dataset_spike
mutation_by_lineage <- impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
# Plot
fig2A <- ggplot(mutation_dataset, aes(x=pos, y=n)) +
geom_segment(
aes(x=pos, xend=pos, y=0, yend=n),
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
linewidth=ifelse(mutation_dataset$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
#  geom_text_repel(data=filter(mutation_dataset, n>10),
#                  aes(label=variant_protein_sorted),
#                  max.overlaps = Inf,
#                  min.segment.length = 10, seed = 42, point.padding = 3,
#                  max.time = 1, max.iter = 1e5,
#                  direction = "x",
#                 color='orange'
# ) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(breaks=seq(0, 30000, 5000)) +
ylab("Frequência de Mutações") +
xlab("Posição (Nucleotídeos)")
mutation_by_lineage <- impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
select("variant_protein_sorted", "variant_lineage") %>%
count()
mutation_by_lineage
mutation_by_lineage <- impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
group_by("variant_protein_sorted", "variant_lineage") %>%
count()
mutation_by_lineage
mutation_by_lineage <- impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
group_by("pos", "variant_protein_sorted", "variant_lineage") %>%
count()
mutation_by_lineage
mutation_by_lineage <- impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
group_by("pos", "variant_lineage") %>%
count()
mutation_by_lineage
mutation_by_lineage <- impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage"))
mutation_by_lineage
mutation_by_lineage <- impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
group_by(pos, variant_lineage) %>%
count()
mutation_by_lineage
mutation_by_lineage <- impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
group_by(pos, variant_protein_sorted, variant_lineage) %>%
count()
mutation_by_lineage
View(mutation_by_lineage)
mutation_by_lineage <- impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
group_by(pos, variant_protein_sorted, variant_lineage) %>%
count() %>%
unnest()
mutation_by_lineage <- impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
group_by(pos, variant_protein_sorted, variant_lineage) %>%
count() %>%
unnest(cols=c(variant_protein_sorted))
mutation_by_lineage
mutation_by_lineage <- impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
group_by(pos, variant_protein_sorted,) %>%
count() %>%
unnest(cols=c(variant_protein_sorted))
mutation_by_lineage
ggplot(mutation_by_lineage, aes(x=variant_lineage, y=variant_protein_sorted))+
geom_bar()
mutation_by_lineage <- impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
group_by(pos, variant_protein_sorted, variant_lineage) %>%
count() %>%
unnest(cols=c(variant_protein_sorted))
ggplot(mutation_by_lineage, aes(x=variant_lineage, y=variant_protein_sorted))+
geom_bar()
ggplot(mutation_by_lineage, aes(x=variant_protein_sorted), color=variant_lineage)+
geom_bar(stat = "count")
ggplot(mutation_by_lineage, aes(x=variant_protein_sorted), colou=variant_lineage)+
geom_bar(stat = "count")
ggplot(mutation_by_lineage, aes(x=variant_protein_sorted), colour=variant_lineage)+
geom_bar(stat = "count")
ggplot(mutation_by_lineage, aes(x=variant_protein_sorted), fill=variant_lineage)+
geom_bar(stat = "count")
ggplot(mutation_by_lineage, aes(x=variant_protein_sorted))+
geom_bar(stat = "count", fill=variant_lineage)
ggplot(mutation_by_lineage, aes(x=variant_protein_sorted, fill=variant_lineage))+
geom_bar(stat = "count")
alleles_names  <- unique(impact_dataset_deduplicate$alleles)
alleles_sorted  <- str_sort(alleles_names, numeric = TRUE)
genes_names  <- unique(impact_dataset_deduplicate$gene)
genes_sorted  <- genes_names[order(nchar(genes_names))]
unique_alleles <- impact_dataset_deduplicate %>%
select(alleles) %>%
distinct()
g.mid <- ggplot(unique_alleles,aes(x=1,y=factor(alleles, alleles_sorted)))+
geom_text(aes(label=alleles, fontface='plain', family='sans'),
size=3.5)+
ggtitle("")+
ylab(NULL)+
scale_x_continuous(expand=c(0,0),limits=c(0.99,1.01))+
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(-5,-1, 1,-1), "mm"))
g1 <- ggplot(data = impact_dataset_gain,
aes(x = factor(alleles, alleles_sorted),
fill = impact)) +
geom_histogram(stat = "count") +
scale_fill_manual(values = c("gray30", "gray80")) +
labs(x=NULL,
fill = 'Efeito') +
theme_classic() +
theme(legend.position="left",
legend.title = element_text(face="bold", size=13),
legend.text =  element_text(face= "italic", size=12),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
axis.line.x.bottom = element_line(color = "black",
linewidth = 1.5,
linetype = 1),
panel.grid.major.x = element_line(color = "gray",
linewidth = 0.5,
linetype = 1),
plot.margin = unit(c(1,-1,1,0), "mm")) +
scale_x_discrete(drop=FALSE) +
scale_y_reverse() + coord_flip()
g2 <- ggplot(data = impact_dataset_loss,
aes(x = factor(alleles, alleles_sorted),
fill = impact)) +
geom_histogram(stat = "count") +
scale_fill_manual(values = c("red", "salmon")) +
labs(x=NULL,
fill = 'Efeito') +
theme_classic() +
theme(legend.title = element_text(face="bold", size=13),
legend.text =  element_text(face= "italic", size=12),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),
axis.line.y.left = element_blank(),
axis.line.x.bottom = element_line(color = "black",
linewidth = 1.5,
linetype = 1),
panel.grid.major.x = element_line(color = "gray",
linewidth = 0.5,
linetype = 1),
plot.margin = unit(c(1,0,1,-1), "mm")
) +
scale_x_discrete(drop=FALSE) +
coord_flip()
fig1C <- (g1 + g.mid + g2)  + plot_layout(ncol=3, widths = c(4,1.4,4), guides = "collect")
unique_gene <- impact_dataset_deduplicate %>%
select(gene) %>%
distinct()
g.mid2 <- ggplot(unique_gene,aes(x=1,y=factor(gene, genes_sorted))) +
geom_text(aes(label=gene, fontface='plain', family='sans'),
size=3.5)+
ggtitle("")+
ylab(NULL)+
scale_x_continuous(expand=c(0,0),limits=c(0.99,1.01))+
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(-5,-1, 1,-1), "mm"))
g4 <- ggplot(data = impact_dataset_gain,
aes(x = factor(gene, genes_sorted),
fill = impact)) +
geom_histogram(stat = "count") +
scale_fill_manual(values = c("gray30", "gray80")) +
labs(x=NULL,
fill = 'Efeito') +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
axis.line.x.bottom = element_line(color = "black",
linewidth = 1.5,
linetype = 1),
panel.grid.major.x = element_line(color = "gray",
linewidth = 0.5,
linetype = 1),
plot.margin = unit(c(1,-1,1,0), "mm")) +
scale_x_discrete(drop=FALSE) +
scale_y_reverse() + coord_flip()
g5 <- ggplot(data = impact_dataset_loss, aes(x = factor(gene, genes_sorted), fill = impact)) +xlab(NULL)+
geom_histogram(stat = "count") +
scale_fill_manual(values = c("red", "salmon")) +
labs(x=NULL,
fill = 'Efeito') +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),
axis.line.y.left = element_blank(),
axis.line.x.bottom = element_line(color = "black",
linewidth = 1.5,
linetype = 1),
panel.grid.major.x = element_line(color = "gray",
linewidth = 0.5,
linetype = 1),
plot.margin = unit(c(1,0,1,-1), "mm")
) +
scale_x_discrete(drop=FALSE) +
coord_flip()
fig1A <- g4  + g.mid2 + g5 + plot_layout(ncol=3, widths = c(4,1.4,4))
impact_dataset_gain_all <- dplyr::semi_join(
impact_dataset_all,
impact_dataset_gain,
by = c("sequence", "alleles", "variant_protein")
)
impact_dataset_loss_all <- dplyr::semi_join(
impact_dataset_all,
impact_dataset_loss,
by = c("sequence", "alleles", "variant_protein")
)
lineages_names  <- unique(peptides_single$variant_lineage)
lineages_sorted  <- str_sort(lineages_names)
unique_lineage <- impact_dataset_all %>%
select(variant_lineage) %>%
distinct()
g.mid3 <- ggplot(unique_lineage,aes(x=1,y=factor(variant_lineage, detection_sorted))) +
geom_text(aes(label=variant_lineage, fontface='plain', family='sans'),
size=3.5)+
ggtitle("")+
ylab(NULL)+
scale_x_continuous(expand=c(0,0),limits=c(0.99,1.01))+
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(-5,-1, 1,-1), "mm"))
g6 <- ggplot(data = impact_dataset_gain_all,
aes(x = factor(variant_lineage, lineages_sorted),
fill = impact)) +
geom_histogram(stat = "count") +
scale_fill_manual(values = c("gray30", "gray80")) +
labs(x=NULL) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
axis.line.x.bottom = element_line(color = "black",
linewidth = 1.5,
linetype = 1),
panel.grid.major.x = element_line(color = "gray",
linewidth = 0.5,
linetype = 1),
plot.margin = unit(c(0,-0,0,0), "mm")) +
scale_x_discrete(drop=FALSE) +
scale_y_reverse() + coord_flip()
g7 <- ggplot(data = impact_dataset_loss_all, aes(x = factor(variant_lineage, lineages_sorted), fill = impact)) +xlab(NULL)+
geom_histogram(stat = "count") +
scale_fill_manual(values = c("red", "salmon")) +
labs(x=NULL) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),
axis.line.y.left = element_blank(),
axis.line.x.bottom = element_line(color = "black",
linewidth = 1.5,
linetype = 1),
panel.grid.major.x = element_line(color = "gray",
linewidth = 0.5,
linetype = 1),
plot.margin = unit(c(0,0,0,-0), "mm")
) +
scale_x_discrete(drop=FALSE) +
scale_y_continuous(labels = scales::label_number(accuracy = 1)) +
coord_flip()
fig1B <- g6  + g.mid3  + g7 + plot_layout(ncol=3, widths = c(4,1.4,4))
fig1 <- (wrap_elements(fig1A) | plot_spacer() | wrap_elements(fig1B) | plot_spacer() | wrap_elements(fig1C))  +
plot_layout(ncol=5, widths = c(1.3/5, 0.0005/5, 1.5/5, 0.0005/5, 1.7/5)) +
plot_annotation(tag_levels = list(c("A", "B", "C")),
theme(plot.tag = element_text(size=16)))
ggsave('Fig1.png', fig1, height = 14, width = 40, scale = 1,  units = "cm")
fig1
fig1 <- (wrap_elements(fig1A) | plot_spacer() | wrap_elements(fig1B) | plot_spacer() | wrap_elements(fig1C))  +
plot_layout(ncol=5, widths = c(1.3/5, 0.0005/5, 1.5/5, 0.0005/5, 1.7/5)) +
plot_annotation(tag_levels = list(c("A", "B", "C"))) &
theme(plot.tag = element_text(face = 'bold'))
fig1
fig1 <- (wrap_elements(fig1A) | plot_spacer() | wrap_elements(fig1B) | plot_spacer() | wrap_elements(fig1C))  +
plot_layout(ncol=5, widths = c(1.3/5, 0.0005/5, 1.5/5, 0.0005/5, 1.7/5)) +
plot_annotation(tag_levels = list(c("A", "B", "C"))) &
theme(plot.tag = element_text(size = 16))
fig1
ggsave('Fig1.png', fig1, height = 14, width = 40, scale = 1,  units = "cm")
fig1 <- (wrap_elements(fig1A) | plot_spacer() | wrap_elements(fig1B) | plot_spacer() | wrap_elements(fig1C))  +
plot_layout(ncol=5, widths = c(1.3/5, 0.0005/5, 1.5/5, 0.0005/5, 1.7/5)) +
plot_annotation(tag_levels = list(c("A", "B", "C"))) &
theme(plot.tag = element_text(size = 22))
fig1
ggsave('Fig1.png', fig1, height = 14, width = 40, scale = 1,  units = "cm")
fig1 <- (wrap_elements(fig1A) | plot_spacer() | wrap_elements(fig1B) | plot_spacer() | wrap_elements(fig1C))  +
plot_layout(ncol=5, widths = c(1.3/5, 0.0005/5, 1.5/5, 0.0005/5, 1.7/5)) +
plot_annotation(tag_levels = list(c("A", "B", "C"))) &
theme(plot.tag = element_text(size = 26))
ggsave('Fig1.png', fig1, height = 14, width = 40, scale = 1,  units = "cm")
