max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
direction = "x",
color='orange'
) +
geom_text_repel(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
aes(label=variant_protein_sorted),
color="red"
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=13),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
plot.margin = unit(c(7,6,5,6), "mm")
) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(limits = c(0, 1200), breaks=seq(0, 1200, 200), expand = c(0,0)) +
ylab("Frequência de Mutações") +
xlab("Resíduos")
fig2B
impact_only_weakloss  <- impact_dataset_deduplicate %>%
dplyr::filter(impact == 'Weak Loss')
impact_only_weakgain  <- impact_dataset_deduplicate %>%
dplyr::filter(impact == 'Weak Gain')
# Plot
fig2A <- ggplot(mutation_dataset, aes(x=pos, y=n)) +
geom_segment(
aes(x=pos, xend=pos, y=0, yend=n),
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
linewidth=ifelse(mutation_dataset$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_weakloss$variant_protein_sorted),
color="salmon",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_weakgain$variant_protein_sorted),
color="gray",
size=2
) +
geom_text_repel(data=filter(mutation_dataset, n>10),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
direction = "x",
color='orange'
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(breaks=seq(0, 30000, 5000)) +
ylab("Frequência de Mutações") +
xlab("Posição (Nucleotídeos)")
fig2A
# Plot
fig2A <- ggplot(mutation_dataset, aes(x=pos, y=n)) +
geom_segment(
aes(x=pos, xend=pos, y=0, yend=n),
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
linewidth=ifelse(mutation_dataset$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_weakloss$variant_protein_sorted),
color="salmon",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_weakgain$variant_protein_sorted),
color="black",
size=2
) +
geom_text_repel(data=filter(mutation_dataset, n>10),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
direction = "x",
color='orange'
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(breaks=seq(0, 30000, 5000)) +
ylab("Frequência de Mutações") +
xlab("Posição (Nucleotídeos)")
fig2A
# Plot
fig2A <- ggplot(mutation_dataset, aes(x=pos, y=n)) +
geom_segment(
aes(x=pos, xend=pos, y=0, yend=n),
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
linewidth=ifelse(mutation_dataset$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_weakloss$variant_protein_sorted),
color="salmon",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_weakgain$variant_protein_sorted),
color="blue",
size=2
) +
geom_text_repel(data=filter(mutation_dataset, n>10),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
direction = "x",
color='orange'
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(breaks=seq(0, 30000, 5000)) +
ylab("Frequência de Mutações") +
xlab("Posição (Nucleotídeos)")
fig2A
# Plot
fig2A <- ggplot(mutation_dataset, aes(x=pos, y=n)) +
geom_segment(
aes(x=pos, xend=pos, y=0, yend=n),
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
linewidth=ifelse(mutation_dataset$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_text_repel(data=filter(mutation_dataset, n>10),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
direction = "x",
color='orange'
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(breaks=seq(0, 30000, 5000)) +
ylab("Frequência de Mutações") +
xlab("Posição (Nucleotídeos)")
fig2A
fig2B <- ggplot(mutation_dataset_spike, aes(x=prot_pos, y=n)) +
geom_segment(
aes(x=prot_pos, xend=prot_pos, y=0, yend=n),
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_text_repel(data=filter(mutation_dataset_spike, n>10 && !(variant_protein_sorted %in% impact_only_loss$variant_protein_sorted)),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
direction = "x",
color='orange'
) +
geom_text_repel(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
aes(label=variant_protein_sorted),
color="red"
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=13),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
plot.margin = unit(c(7,6,5,6), "mm")
) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(limits = c(0, 1200), breaks=seq(0, 1200, 200), expand = c(0,0)) +
ylab("Frequência de Mutações") +
xlab("Resíduos")
fig2B
ggsave('Fig2B.png', fig2B, height = 6, width = 24, scale = 1,  units = "cm")
fig2B <- ggplot(mutation_dataset_spike, aes(x=prot_pos, y=n)) +
geom_segment(
aes(x=prot_pos, xend=prot_pos, y=0, yend=n),
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_text_repel(data=filter(mutation_dataset_spike, n>10 && !(variant_protein_sorted %in% impact_only_loss$variant_protein_sorted)),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
direction = "x",
color='orange'
) +
geom_text_repel(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
aes(label=variant_protein_sorted),
color="red"
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=13),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
plot.margin = unit(c(7,6,5,7), "mm")
) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(limits = c(0, 1200), breaks=seq(0, 1200, 200), expand = c(0,0)) +
ylab("Frequência de Mutações") +
xlab("Resíduos")
fig2B
ggsave('Fig2B.png', fig2B, height = 6, width = 24, scale = 1,  units = "cm")
fig2B <- ggplot(mutation_dataset_spike, aes(x=prot_pos, y=n)) +
geom_segment(
aes(x=prot_pos, xend=prot_pos, y=0, yend=n),
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_text_repel(data=filter(mutation_dataset_spike, n>10 && !(variant_protein_sorted %in% impact_only_loss$variant_protein_sorted)),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
direction = "x",
color='orange'
) +
geom_text_repel(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
aes(label=variant_protein_sorted),
color="red"
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=13),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
plot.margin = unit(c(7,6,5,10), "mm")
) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(limits = c(0, 1200), breaks=seq(0, 1200, 200), expand = c(0,0)) +
ylab("Frequência de Mutações") +
xlab("Resíduos")
fig2B
fig2B <- ggplot(mutation_dataset_spike, aes(x=prot_pos, y=n)) +
geom_segment(
aes(x=prot_pos, xend=prot_pos, y=0, yend=n),
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_text_repel(data=filter(mutation_dataset_spike, n>10 && !(variant_protein_sorted %in% impact_only_loss$variant_protein_sorted)),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
direction = "x",
color='orange'
) +
geom_text_repel(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
aes(label=variant_protein_sorted),
color="red"
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=13),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
plot.margin = unit(c(8,6,5,6), "mm")
) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(limits = c(0, 1200), breaks=seq(0, 1200, 200), expand = c(0,0)) +
ylab("Frequência de Mutações") +
xlab("Resíduos")
fig2B
ggsave('Fig2B.png', fig2B, height = 6, width = 24, scale = 1,  units = "cm")
fig2B <- ggplot(mutation_dataset_spike, aes(x=prot_pos, y=n)) +
geom_segment(
aes(x=prot_pos, xend=prot_pos, y=0, yend=n),
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_text_repel(data=filter(mutation_dataset_spike, n>10 && !(variant_protein_sorted %in% impact_only_loss$variant_protein_sorted)),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
direction = "x",
color='orange'
) +
geom_text_repel(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
aes(label=variant_protein_sorted),
color="red"
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=13),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
plot.margin = unit(c(10,6,5,6), "mm")
) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(limits = c(0, 1200), breaks=seq(0, 1200, 200), expand = c(0,0)) +
ylab("Frequência de Mutações") +
xlab("Resíduos")
fig2B
ggsave('Fig2B.png', fig2B, height = 6, width = 24, scale = 1,  units = "cm")
fig2B <- ggplot(mutation_dataset_spike, aes(x=prot_pos, y=n)) +
geom_segment(
aes(x=prot_pos, xend=prot_pos, y=0, yend=n),
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_text_repel(data=filter(mutation_dataset_spike, n>10 && !(variant_protein_sorted %in% impact_only_loss$variant_protein_sorted)),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
direction = "x",
color='orange'
) +
geom_text_repel(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
aes(label=variant_protein_sorted),
color="red"
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=13),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
plot.margin = unit(c(12,6,5,6), "mm")
) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(limits = c(0, 1200), breaks=seq(0, 1200, 200), expand = c(0,0)) +
ylab("Frequência de Mutações") +
xlab("Resíduos")
fig2B
ggsave('Fig2B.png', fig2B, height = 6, width = 24, scale = 1,  units = "cm")
ggsave('Fig2B.png', fig2B, height = 7, width = 24, scale = 1,  units = "cm")
# Plot
fig2A <- ggplot(mutation_dataset, aes(x=pos, y=n)) +
geom_segment(
aes(x=pos, xend=pos, y=0, yend=n),
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
linewidth=ifelse(mutation_dataset$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
#  geom_text_repel(data=filter(mutation_dataset, n>10),
#                  aes(label=variant_protein_sorted),
#                  max.overlaps = Inf,
#                  min.segment.length = 10, seed = 42, point.padding = 3,
#                  max.time = 1, max.iter = 1e5,
#                  direction = "x",
#                 color='orange'
# ) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(breaks=seq(0, 30000, 5000)) +
ylab("Frequência de Mutações") +
xlab("Posição (Nucleotídeos)")
fig2A
ggsave('Fig2A.png', fig2A, height = 7, width = 26, scale = 1,  units = "cm")
ggsave('Fig2A.png', fig2A, height = 8, width = 26, scale = 1,  units = "cm")
