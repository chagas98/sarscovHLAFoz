"#D90016", "#842C35", "#EB8E9A")
getPalette_alleles = colorRampPalette(brewer.pal("#D9D100", "#84812C", "#333222",
"#0090D9", "#267399", "#2D4A59",
"#D90016", "#842C35", "#EB8E9A"))
getPalette_alleles = ("#D9D100", "#84812C", "#333222",
getPalette_alleles = colorRampPalette(c("#D9D100", "#84812C", "#333222",
"#0090D9", "#267399", "#2D4A59",
"#D90016", "#842C35", "#EB8E9A"))
# extend x axis based on variants
break.vec <- range(as.Date("01-03-2020", format="%d-%m-%Y"), as.Date("01-06-2022", format="%d-%m-%Y"))
plot_count_alleles <-
ggplot(patients_date, aes(x = lubridate::my(month_year), y = n)) +
geom_bar(stat = "identity") +
labs(x = "", y = "") +
scale_x_date(
limits = break.vec,
date_breaks = '1 month',
date_labels = "%b-%Y",
expand = c(0.025, 0)
) +
theme_linedraw() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.margin = margin(0, 0, 0, 0, "mm")
)
plot_alleles_month <- ggplot(patients_date, aes(x = lubridate::my(month_year), y = prop, fill=alleles)) +
geom_bar(stat = "identity", colour='black') +
labs( x = "",
y = "Prevalência Relativa (%)") +
scale_x_date(limits = break.vec, date_breaks = '1 month', date_labels = "%b-%Y", expand = c(0.025,0)) +
scale_fill_manual('Alelos', values = getPalette_alleles(colourCount_alleles)) +
scale_y_continuous(expand = c(0.01,0)) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.x = element_blank(),
legend.title = element_text(face = "bold"),
legend.title.align = 0.2,
panel.grid=element_blank(),
panel.background=element_blank())
fig5 <- plot_count_variants +
plot_variants_month +
plot_count_alleles +
plot_alleles_month +
plot_layout(ncol=1, heights = c(1.2, 4, 1.2, 4), guides = "auto") +
plot_annotation(tag_levels = list(c("A", "", "B", "")))
fig5
getPalette_alleles = colorRampPalette(c("#D9D100",  "#333222",
"#0090D9",  "#2D4A59",
"#D90016",  "#EB8E9A"))
# extend x axis based on variants
break.vec <- range(as.Date("01-03-2020", format="%d-%m-%Y"), as.Date("01-06-2022", format="%d-%m-%Y"))
plot_count_alleles <-
ggplot(patients_date, aes(x = lubridate::my(month_year), y = n)) +
geom_bar(stat = "identity") +
labs(x = "", y = "") +
scale_x_date(
limits = break.vec,
date_breaks = '1 month',
date_labels = "%b-%Y",
expand = c(0.025, 0)
) +
theme_linedraw() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.margin = margin(0, 0, 0, 0, "mm")
)
plot_alleles_month <- ggplot(patients_date, aes(x = lubridate::my(month_year), y = prop, fill=alleles)) +
geom_bar(stat = "identity", colour='black') +
labs( x = "",
y = "Prevalência Relativa (%)") +
scale_x_date(limits = break.vec, date_breaks = '1 month', date_labels = "%b-%Y", expand = c(0.025,0)) +
scale_fill_manual('Alelos', values = getPalette_alleles(colourCount_alleles)) +
scale_y_continuous(expand = c(0.01,0)) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.x = element_blank(),
legend.title = element_text(face = "bold"),
legend.title.align = 0.2,
panel.grid=element_blank(),
panel.background=element_blank())
fig5 <- plot_count_variants +
plot_variants_month +
plot_count_alleles +
plot_alleles_month +
plot_layout(ncol=1, heights = c(1.2, 4, 1.2, 4), guides = "auto") +
plot_annotation(tag_levels = list(c("A", "", "B", "")))
fig5
getPalette_alleles = colorRampPalette(c("#D9D100",  "#333222",
"#0090D9",  "#2D4A59",
"#D90016",  "#EB8E9A"))
# extend x axis based on variants
break.vec <- range(as.Date("01-03-2020", format="%d-%m-%Y"), as.Date("01-06-2022", format="%d-%m-%Y"))
plot_count_alleles <-
ggplot(patients_date, aes(x = lubridate::my(month_year), y = n)) +
geom_bar(stat = "identity") +
labs(x = "", y = "") +
scale_x_date(
limits = break.vec,
date_breaks = '1 month',
date_labels = "%b-%Y",
expand = c(0.025, 0)
) +
theme_linedraw() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.margin = margin(0, 0, 0, 0, "mm")
)
plot_alleles_month <- ggplot(patients_date, aes(x = lubridate::my(month_year), y = prop, fill=alleles)) +
geom_bar(stat = "identity", colour='black') +
labs( x = "",
y = "Prevalência Relativa (%)") +
scale_x_date(limits = break.vec, date_breaks = '1 month', date_labels = "%b-%Y", expand = c(0.025,0)) +
scale_fill_manual('Alelos', values = getPalette_alleles(colourCount_alleles)) +
scale_y_continuous(expand = c(0.01,0)) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.x = element_blank(),
legend.title = element_text(face = "bold"),
legend.title.align = 0.2,
panel.grid=element_blank(),
panel.background=element_blank())
fig5 <- plot_count_variants +
plot_variants_month +
plot_count_alleles +
plot_alleles_month +
plot_layout(ncol=1, heights = c(1.2, 4, 1.2, 4), guides = "auto") +
plot_annotation(tag_levels = list(c("A", "", "B", "")))
fig5
getPalette_alleles = colorRampPalette(c("#D9D100",  "#333222",
"#0090D9",  "#2D4A59",
"#D90016",  "#EB8E9A"))
# extend x axis based on variants
break.vec <- range(as.Date("01-03-2020", format="%d-%m-%Y"), as.Date("01-06-2022", format="%d-%m-%Y"))
plot_count_alleles <-
ggplot(patients_date, aes(x = lubridate::my(month_year), y = n)) +
geom_bar(stat = "identity") +
labs(x = "", y = "") +
scale_x_date(
limits = break.vec,
date_breaks = '1 month',
date_labels = "%b-%Y",
expand = c(0.025, 0)
) +
theme_linedraw() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.margin = margin(0, 0, 0, 0, "mm")
)
plot_count_alleles <-
ggplot(patients_date, aes(x = lubridate::my(month_year), y = n)) +
geom_bar(stat = "identity") +
labs(x = "", y = "") +
scale_x_date(
limits = break.vec,
date_breaks = '1 month',
date_labels = "%b-%Y",
expand = c(0.025, 0)
) +
theme_linedraw() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.margin = margin(0, 0, 0, 0, "mm")
)
plot_alleles_month <- ggplot(patients_date, aes(x = lubridate::my(month_year), y = prop, fill=alleles)) +
geom_bar(stat = "identity", colour='black') +
labs( x = "",
y = "Prevalência Relativa (%)") +
scale_x_date(limits = break.vec, date_breaks = '1 month', date_labels = "%b-%Y", expand = c(0.025,0)) +
scale_fill_manual('Alelos', values = getPalette_alleles(colourCount_alleles)) +
scale_y_continuous(expand = c(0.01,0)) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.x = element_blank(),
legend.title = element_text(face = "bold"),
legend.title.align = 0.2,
panel.grid=element_blank(),
panel.background=element_blank())
fig5 <- plot_count_variants +
plot_variants_month +
plot_count_alleles +
plot_alleles_month +
plot_layout(ncol=1, heights = c(1.2, 4, 1.2, 4), guides = "auto") +
plot_annotation(tag_levels = list(c("A", "", "B", "")))
fig5
getPalette_alleles = colorRampPalette(c("#D9D100",  "#333222",
"#0090D9",  "#2D4A59",
"#D90016",  "#EB8E9A"))
# extend x axis based on variants
break.vec <- range(as.Date("01-03-2020", format="%d-%m-%Y"), as.Date("01-06-2022", format="%d-%m-%Y"))
plot_count_alleles <-
ggplot(patients_date, aes(x = lubridate::my(month_year), y = n)) +
geom_bar(stat = "identity") +
labs(x = "", y = "") +
scale_x_date(
limits = break.vec,
date_breaks = '1 month',
date_labels = "%b-%Y",
expand = c(0.025, 0)
) +
theme_linedraw() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.margin = margin(0, 0, 0, 0, "mm")
)
plot_alleles_month <- ggplot(patients_date, aes(x = lubridate::my(month_year), y = prop, fill=alleles)) +
geom_bar(stat = "identity", colour='black') +
labs( x = "",
y = "Prevalência Relativa (%)") +
scale_x_date(limits = break.vec, date_breaks = '1 month', date_labels = "%b-%Y", expand = c(0.025,0)) +
scale_fill_manual('Alelos', values = getPalette_alleles(colourCount_alleles)) +
scale_y_continuous(expand = c(0.01,0)) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.x = element_blank(),
legend.title = element_text(face = "bold"),
legend.title.align = 0.2,
panel.grid=element_blank(),
panel.background=element_blank())
fig5 <- plot_count_variants +
plot_variants_month +
plot_count_alleles +
plot_alleles_month +
plot_layout(ncol=1, heights = c(1.2, 4, 1.2, 4), guides = "auto") +
plot_annotation(tag_levels = list(c("A", "", "B", "")))
fig5
plot_alleles_month <- ggplot(patients_date, aes(x = lubridate::my(month_year), y = prop, fill=alleles)) +
geom_bar(stat = "identity", colour='black') +
labs( x = "",
y = "Prevalência Relativa (%)") +
scale_x_date(limits = break.vec, date_breaks = '1 month', date_labels = "%b-%Y", expand = c(0.025,0)) +
scale_fill_manual('Alelos', values = getPalette_alleles(colourCount_alleles)) +
scale_y_continuous(expand = c(0.01,0)) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.x = element_blank(),
legend.title = element_text(face = "bold"),
legend.title.align = 0.2,
panel.grid=element_blank(),
panel.background=element_blank())
plot_alleles_month
getPalette_alleles = colorRampPalette(c("#D9D100", "#84812C", "#333222",
"#0090D9", "#267399", "#2D4A59",
"#D90016", "#842C35", "#EB8E9A"))
# extend x axis based on variants
break.vec <- range(as.Date("01-03-2020", format="%d-%m-%Y"), as.Date("01-06-2022", format="%d-%m-%Y"))
plot_count_alleles <-
ggplot(patients_date, aes(x = lubridate::my(month_year), y = n)) +
geom_bar(stat = "identity") +
labs(x = "", y = "") +
scale_x_date(
limits = break.vec,
date_breaks = '1 month',
date_labels = "%b-%Y",
expand = c(0.025, 0)
) +
theme_linedraw() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.margin = margin(0, 0, 0, 0, "mm")
)
plot_alleles_month <- ggplot(patients_date, aes(x = lubridate::my(month_year), y = prop, fill=alleles)) +
geom_bar(stat = "identity", colour='black') +
labs( x = "",
y = "Prevalência Relativa (%)") +
scale_x_date(limits = break.vec, date_breaks = '1 month', date_labels = "%b-%Y", expand = c(0.025,0)) +
scale_fill_manual('Alelos', values = getPalette_alleles(colourCount_alleles)) +
scale_y_continuous(expand = c(0.01,0)) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.x = element_blank(),
legend.title = element_text(face = "bold"),
legend.title.align = 0.2,
panel.grid=element_blank(),
panel.background=element_blank())
fig5 <- plot_count_variants +
plot_variants_month +
plot_count_alleles +
plot_alleles_month +
plot_layout(ncol=1, heights = c(1.2, 4, 1.2, 4), guides = "auto") +
plot_annotation(tag_levels = list(c("A", "", "B", "")))
fig5
ggsave('Fig5.png', fig5, height = 22, width = 27, scale = 0.8,  units = "cm")
###################################################################################
################################### FIG 6 #########################################
###################################################################################
library(ggnewscale)
library(grid)
impact_dataset_all$fold_change <- log2(impact_dataset_all$rank_values_mutant / impact_dataset_all$rank_values_refseq)
impact_dataset_al
FC_loss_all <- impact_dataset_all %>%
dplyr::mutate(fold_change = log2(rank_values_mutant / rank_values_refseq)) %>%
dplyr::filter(impact %in% c('Loss', 'Weak Loss'))
muh_grob <- grid::rectGrob(
x=0, y=1:21, gp=gpar(
color='white', fill= getPalette_variants(colourCount_variants), alpha=0.8))
colourCount_alleles = length(unique(FC_loss_all$alleles))
fig6 <- ggplot(FC_loss_all)+
ggnewscale::new_scale_colour()+
geom_point(aes(x = fold_change, y = factor(variant_lineage, detection_sorted),
colour = alleles, shape=factor(length)),
size = 3,
fill = NA,
stroke=1)+
labs(x=expression(phantom()*Log[2]*FC),
y = '',
shape="K-mers") +
coord_cartesian(clip='off') +
theme(
plot.title = element_text(size=14, face= "bold", colour= "black" ),
axis.title.x = element_text(size=14, face="bold", colour = "black"),
axis.title.y = element_text(size=14, face="bold", colour = "black"),
axis.text.x = element_text(size=10, face="bold", colour = "black"),
axis.text.y = element_text(size=10, face="bold", colour = "white"),
legend.title = element_text(face = "bold"),
legend.title.align = 0.4,
panel.background = element_rect(fill = "white"),
panel.grid = element_line(color = "grey70")
) +
scale_colour_manual('Alelos', values = getPalette_alleles(colourCount_alleles)) +
scale_shape_manual(values = c(15, 18, 16, 17)) +
annotation_custom(
grob=muh_grob, ymin = 0, ymax = 1, xmin = -0.55, xmax=0.25
) +
scale_y_discrete(drop = FALSE)
fig6
getPalette_alleles = colorRampPalette(brewer.pal(9, "BrBG"))
# extend x axis based on variants
break.vec <- range(as.Date("01-03-2020", format="%d-%m-%Y"), as.Date("01-06-2022", format="%d-%m-%Y"))
plot_count_alleles <-
ggplot(patients_date, aes(x = lubridate::my(month_year), y = n)) +
geom_bar(stat = "identity") +
labs(x = "", y = "") +
scale_x_date(
limits = break.vec,
date_breaks = '1 month',
date_labels = "%b-%Y",
expand = c(0.025, 0)
) +
theme_linedraw() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.margin = margin(0, 0, 0, 0, "mm")
)
plot_alleles_month <- ggplot(patients_date, aes(x = lubridate::my(month_year), y = prop, fill=alleles)) +
geom_bar(stat = "identity", colour='black') +
labs( x = "",
y = "Prevalência Relativa (%)") +
scale_x_date(limits = break.vec, date_breaks = '1 month', date_labels = "%b-%Y", expand = c(0.025,0)) +
scale_fill_manual('Alelos', values = getPalette_alleles(colourCount_alleles)) +
scale_y_continuous(expand = c(0.01,0)) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.x = element_blank(),
legend.title = element_text(face = "bold"),
legend.title.align = 0.2,
panel.grid=element_blank(),
panel.background=element_blank())
fig5 <- plot_count_variants +
plot_variants_month +
plot_count_alleles +
plot_alleles_month +
plot_layout(ncol=1, heights = c(1.2, 4, 1.2, 4), guides = "auto") +
plot_annotation(tag_levels = list(c("A", "", "B", "")))
fig5
ggsave('Fig5.png', fig5, height = 22, width = 27, scale = 0.8,  units = "cm")
###################################################################################
################################### FIG 6 #########################################
###################################################################################
library(ggnewscale)
library(grid)
impact_dataset_all$fold_change <- log2(impact_dataset_all$rank_values_mutant / impact_dataset_all$rank_values_refseq)
impact_dataset_al
FC_loss_all <- impact_dataset_all %>%
dplyr::mutate(fold_change = log2(rank_values_mutant / rank_values_refseq)) %>%
dplyr::filter(impact %in% c('Loss', 'Weak Loss'))
muh_grob <- grid::rectGrob(
x=0, y=1:21, gp=gpar(
color='white', fill= getPalette_variants(colourCount_variants), alpha=0.8))
colourCount_alleles = length(unique(FC_loss_all$alleles))
FC_loss_all <- impact_dataset_all %>%
dplyr::mutate(fold_change = log2(rank_values_mutant / rank_values_refseq)) %>%
dplyr::filter(impact %in% c('Loss', 'Weak Loss'))
muh_grob <- grid::rectGrob(
x=0, y=1:21, gp=gpar(
color='white', fill= getPalette_variants(colourCount_variants), alpha=0.8))
colourCount_alleles = length(unique(FC_loss_all$alleles))
fig6 <- ggplot(FC_loss_all)+
ggnewscale::new_scale_colour()+
geom_point(aes(x = fold_change, y = factor(variant_lineage, detection_sorted),
colour = alleles, shape=factor(length)),
size = 3,
fill = NA,
stroke=1)+
labs(x=expression(phantom()*Log[2]*FC),
y = '',
shape="K-mers") +
coord_cartesian(clip='off') +
theme(
plot.title = element_text(size=14, face= "bold", colour= "black" ),
axis.title.x = element_text(size=14, face="bold", colour = "black"),
axis.title.y = element_text(size=14, face="bold", colour = "black"),
axis.text.x = element_text(size=10, face="bold", colour = "black"),
axis.text.y = element_text(size=10, face="bold", colour = "white"),
legend.title = element_text(face = "bold"),
legend.title.align = 0.4,
panel.background = element_rect(fill = "white"),
panel.grid = element_line(color = "grey70")
) +
scale_colour_manual('Alelos', values = getPalette_alleles(colourCount_alleles)) +
scale_shape_manual(values = c(15, 18, 16, 17)) +
annotation_custom(
grob=muh_grob, ymin = 0, ymax = 1, xmin = -0.55, xmax=0.25
) +
scale_y_discrete(drop = FALSE)
fig6
ggsave('Fig6.png', fig6, height = 15, width = 27, scale = 1,  units = "cm")
impact_dataset_comparative <-  impact_dataset_deduplicate %>%
dplyr::filter(str_detect(impact, 'Loss|Gain')) %>%
mutate(paired = row_number()) %>%
tidyr::pivot_longer(
cols = contains('rank_values_'),
names_prefix = 'rank_values_',
names_to = 'rank_type')
impact_dataset_deduplicate$paired <- seq.int(nrow(data))
seq.int(nrow(impact_dataset_deduplicate))
impact_dataset_comparative <-  impact_dataset_deduplicate %>%
dplyr::filter(str_detect(impact, 'Loss|Gain')) %>%
mutate(paired = row_number()) %>%
tidyr::pivot_longer(
cols = contains('rank_values_'),
names_prefix = 'rank_values_',
names_to = 'rank_type')
impact_dataset_deduplicate$paired <- seq.int(nrow(data))
View(impact_dataset_comparative)
impact_geral = ifelse(str_detect(impact, 'Loss'),'Loss', 'Gain') %>%
impact_dataset_comparative <-  impact_dataset_deduplicate %>%
dplyr::filter(str_detect(impact, 'Loss|Gain')) %>%
mutate(paired = row_number(),
impact_geral = ifelse(str_detect(impact, 'Loss'),'Loss', 'Gain')) %>%
tidyr::pivot_longer(
cols = contains('rank_values_'),
names_prefix = 'rank_values_',
names_to = 'rank_type')
impact_dataset_comparative <-  impact_dataset_deduplicate %>%
dplyr::filter(str_detect(impact, 'Loss|Gain')) %>%
mutate(paired = row_number(),
impact_geral = case_when(
ifelse(str_detect(impact, 'Loss'),
'Loss',
'Gain'))
) %>%
tidyr::pivot_longer(
cols = contains('rank_values_'),
names_prefix = 'rank_values_',
names_to = 'rank_type')
impact_dataset_comparative <-  impact_dataset_deduplicate %>%
dplyr::filter(str_detect(impact, 'Loss|Gain')) %>%
mutate(paired = row_number(),
impact_geral = case_when(
ifelse('Loss' %in% impact,
'Loss',
'Gain'))
) %>%
tidyr::pivot_longer(
cols = contains('rank_values_'),
names_prefix = 'rank_values_',
names_to = 'rank_type')
impact_dataset_comparative <-  impact_dataset_deduplicate %>%
dplyr::filter(str_detect(impact, 'Loss|Gain')) %>%
mutate(paired = row_number(),
impact_geral = case_when(
str_detect(impact, 'Loss'), 'Loss','Gain')
) %>%
tidyr::pivot_longer(
cols = contains('rank_values_'),
names_prefix = 'rank_values_',
names_to = 'rank_type')
impact_dataset_comparative <-  impact_dataset_deduplicate %>%
dplyr::filter(str_detect(impact, 'Loss|Gain')) %>%
mutate(paired = row_number(),
impact_geral = case_when(
str_detect(impact, 'Loss') ~ 'Loss',
str_detect(impact, 'Gain') ~ 'Gain')
) %>%
tidyr::pivot_longer(
cols = contains('rank_values_'),
names_prefix = 'rank_values_',
names_to = 'rank_type')
ggboxplot()
###################################################################################
################################### testes ########################################
###################################################################################
library(ggpubr)
library(rstatix)
install.packages('ggpubr')
ggboxplot()
install.packages('ggpubr')
install.packages('nloptr')
install.packages('nloptr')
install.packages("nloptr", dependencies = TRUE)
###################################################################################
################################### testes ########################################
###################################################################################
library(ggpubr)
