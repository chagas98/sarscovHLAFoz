source("~/Documents/UNILA/sarscovHLAFoz/MutationPipeline/results/mutations/analysis.R")
fig9 <- fig9a + fig9b +
plot_layout(ncol=1, heights = c(0.7, 0.3), guides = "auto") +
plot_annotation(tag_levels = list(c("A", "B")))  &
theme(plot.tag = element_text(size = 20))
ggsave('Fig9.png', fig9, height = 25, width =30, scale = 1,  units = "cm")
impact_dataset_comparative <-  impact_dataset_deduplicate %>%
dplyr::filter(str_detect(impact, 'Loss')) %>%
mutate(paired = row_number(),
impact_geral = case_when(
str_detect(impact, 'Loss') ~ 'Total Loss',
str_detect(impact, 'Gain') ~ 'Total Gain')
) %>%
tidyr::pivot_longer(
cols = contains('rank_values_'),
names_prefix = 'rank_values_',
names_to = 'rank_type') %>%
mutate(log2value = log2(value),
rank_type = case_when(
rank_type=='mutant' ~ 'Mutação',
rank_type=='refseq' ~ 'Referência'
))
fig10 <- ggplot(impact_dataset_comparative, aes(x=rank_type, y=log2value)) +
geom_boxplot(width = 0.3, size = 0.4
) +
geom_signif(comparisons = list(c('Mutação', 'Referência'))
) +
geom_dotplot(
aes(fill = impact_geral),
alpha = 0.7,
dotsize = 4,
binaxis='y', stackdir='center'
) +
geom_line(aes(group = paired),
color = "black",
alpha = 0.5
) +
scale_fill_manual(values = "red") +
labs(y = expression(phantom()*Log[2]*('Afinidade de Ligação')),
fill = 'Efeito') +
theme_bw()+
theme(legend.position = "bottom",
legend.title = element_text(face="bold", size=13),
legend.text =  element_text(face= "italic", size=12),
axis.text.x = element_text(face="bold", size=12),
axis.title.x = element_blank(),
axis.text.y = element_text(size=13),
axis.title.y = element_text(face="bold", size=14),
strip.text.x = element_text(size = 13)
) +
ylim(NA, 10) +
facet_wrap(~alleles)
ggsave('Fig10.png', fig10, height = 10, width = 25, scale = 1,  units = "cm")
# quantas mutações por região?
Q1 <- peptides_single %>%
deduplicating(data = .,
columns = c("pos", "gene", "variant_protein_sorted")) %>%
group_by(gene) %>%
tally()
# quais mutações por região?
Q2 <- impact_dataset_all %>%
deduplicating(data = .,
columns = c("pos", "gene", "variant_lineage", "variant_protein_sorted")) %>%
group_by(gene,pos,variant_protein_sorted,variant_lineage, impact) %>%
tally() %>%
ungroup() %>%
print(n=200)
Q3 <- impact_dataset_loss_all_sup %>%
group_by(gene,pos,variant_protein_sorted, impact) %>%
tally() %>%
ungroup() %>%
print(n=200)
# Quantas mutações sao Loss por alelo?
Q3_1 <- impact_dataset_loss_all_sup %>%
group_by(alleles, variant_protein_sorted, impact) %>%
tally() %>%
ungroup() %>%
print(n=200)
# Quantas mutações Loss?
length(unique(Q3_1$variant_protein_sorted))
mutation_dataset <- impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
group_by(pos,gene,variant_protein_sorted) %>%
count()
Q4_1 <-  impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
filter(gene == 'S') %>%
group_by(pos,gene,variant_protein_sorted) %>%
count() %>%
filter(n > 20)
Q4_2 <-  impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
filter(gene == 'S') %>%
group_by(pos,gene,variant_protein_sorted, variant_lineage) %>%
filter(variant_protein_sorted %in% Q4_1$variant_protein_sorted) %>%
count()
# numero de pacientes incluidos
Q5 <- patients %>%
filter(HospitalPeriod_days < 65)
Q6 <- metadata_date %>%
mutate( wave = case_when(
Date >= as.Date("2020-02-01") & Date <= as.Date("2020-10-31") ~ '1W',
Date > as.Date("2020-10-31") & Date <= as.Date("2021-12-31") ~ '2W',
Date > as.Date("2021-12-31") & Date <= as.Date("2022-05-31") ~ '3W',
Date > as.Date("2020-05-31") & Date <= as.Date("2022-12-31") ~ '4W'))
Q6_1 <-  Q6 %>%
count(Lineage, wave) %>%
group_by(wave) %>%
mutate(prop = prop.table(n)*100)
# Qual a porcentagem de sequencias por onda?
Q6_2 <-  Q6 %>%
count(wave) %>%
mutate(prop = prop.table(n)*100)
# Fold change valores
Q7 <- FC_loss_all %>%
select(sequence, refseq, length, gene,pos,variant_protein_sorted, impact, alleles, variant_lineage, fold_change, fold)
Q7_2 <- Q7 %>%
group_by(sequence, refseq, length, gene, alleles, variant_protein_sorted,  fold_change, fold) %>%
tally()
nrow(peptides_deduplicate)
# Quantas mutaçoes unicas
unique(peptides_deduplicate$variant_protein_sorted)
# Quantas mutaçoes unicas
length(unique(peptides_deduplicate$variant_protein_sorted))
View(impact_dataset_all)
View(patients)
View(peptides_deduplicate)
# Quantas mutaçoes unicas
length(unique(peptides_deduplicate$variant_protein_sorted))
Q4_1 <-  impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
filter(gene == 'S') %>%
group_by(pos,gene,variant_protein_sorted) %>%
count()
View(Q4_1)
lista_labels = list(
length = "k-mers",
gene = 'Proteins')
##Collect between outcomes
tab_stats <- template_table(data = impact_dataset_deduplicate,
div = "impact",
include_list = names(lista_labels),
translation = lista_labels)
summary_table_final <-
gtsummary::tbl_merge(list(tab_stats)) %>%
gtsummary::modify_header(label = "")
summary_table_final
