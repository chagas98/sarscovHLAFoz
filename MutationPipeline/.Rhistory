g6 <- ggplot(data = impact_dataset_gain_all,
aes(x = factor(variant_lineage, lineages_sorted),
fill = impact)) +
geom_histogram(stat = "count") +
scale_fill_manual(values = c("gray30", "gray80")) +
labs(x=NULL) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
axis.line.x.bottom = element_line(color = "black",
linewidth = 1.5,
linetype = 1),
panel.grid.major.x = element_line(color = "gray",
linewidth = 0.5,
linetype = 1),
plot.margin = unit(c(0,-0,0,0), "mm")) +
scale_x_discrete(drop=FALSE) +
scale_y_reverse() + coord_flip()
g7 <- ggplot(data = impact_dataset_loss_all, aes(x = factor(variant_lineage, lineages_sorted), fill = impact)) +xlab(NULL)+
geom_histogram(stat = "count") +
scale_fill_manual(values = c("red", "salmon")) +
labs(x=NULL) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),
axis.line.y.left = element_blank(),
axis.line.x.bottom = element_line(color = "black",
linewidth = 1.5,
linetype = 1),
panel.grid.major.x = element_line(color = "gray",
linewidth = 0.5,
linetype = 1),
plot.margin = unit(c(0,0,0,-0), "mm")
) +
scale_x_discrete(drop=FALSE) +
scale_y_continuous(labels = scales::label_number(accuracy = 1)) +
coord_flip()
fig1B <- g6  + g.mid3  + g7 + plot_layout(ncol=3, widths = c(4,1.4,4))
fig1 <- (wrap_elements(fig1A) | plot_spacer() | wrap_elements(fig1B) | plot_spacer() | wrap_elements(fig1C))  +
plot_layout(ncol=5, widths = c(1.3/5, 0.0005/5, 1.5/5, 0.0005/5, 1.7/5)) +
plot_annotation(tag_levels = list(c("A", "B", "C"))) &
theme(plot.tag = element_text(size = 26))
fig1
ggsave('Fig1.png', fig1, height = 14, width = 40, scale = 1,  units = "cm")
mutation_dataset <- impact_dataset_all %>%
deduplicating(data = ., columns = c("variant_protein_sorted", "gene", "variant_lineage")) %>%
group_by(pos,gene,variant_protein_sorted) %>%
count()
# Plot
fig2A <- ggplot(mutation_dataset, aes(x=pos, y=n)) +
geom_segment(
aes(x=pos, xend=pos, y=0, yend=n),
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
linewidth=ifelse(mutation_dataset$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
#  geom_text_repel(data=filter(mutation_dataset, n>10),
#                  aes(label=variant_protein_sorted),
#                  max.overlaps = Inf,
#                  min.segment.length = 10, seed = 42, point.padding = 3,
#                  max.time = 1, max.iter = 1e5,
#                  direction = "x",
#                 color='orange'
# ) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(breaks=seq(0, 30000, 5000)) +
ylab("Frequência de Mutações") +
xlab("Posição (Nucleotídeos)")
fig2A
ggsave('Fig2A.png', fig2A, height = 8, width = 26, scale = 1,  units = "cm")
mutation_dataset_spike <-  mutation_dataset %>%
filter(gene == 'S') %>%
mutate(prot_pos = as.numeric(map(variant_protein_sorted, parse_number)))
paste0(mutation_dataset_spike$prot_pos, collapse = ' resid ')
fig2B <- ggplot(mutation_dataset_spike, aes(x=prot_pos, y=n)) +
geom_segment(
aes(x=prot_pos, xend=prot_pos, y=0, yend=n),
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset_spike$n > 10, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 10, 4, 2)
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_text_repel(data=filter(mutation_dataset_spike, n>10 && !(variant_protein_sorted %in% impact_only_loss$variant_protein_sorted)),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
direction = "x",
color='orange'
) +
geom_text_repel(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
aes(label=variant_protein_sorted),
color="red"
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=13),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
plot.margin = unit(c(7,6,5,6), "mm")
) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(limits = c(0, 1273), breaks=seq(0, 1200, 200), expand = c(0,0)) +
ylab("Frequência de Mutações") +
xlab("Resíduos")
fig2B
ggsave('Fig2B.png', fig2B, height = 7, width = 24, scale = 1,  units = "cm")
mutation_dataset_spike
alleles_binned <- patients %>%
filter(HospitalPeriod_days < 65)  %>%
mutate(month_year = format(as.Date(Hospital_admission), "%m-%Y")) %>%
select(allele1, allele2, month_year) %>%
pivot_longer(cols = c(allele1, allele2),
names_to = 'type',
values_to = 'alleles') %>%
count(alleles) %>%
group_by(alleles) %>%
mutate(alleles = ifelse(n < 10, "Outros", alleles)) %>%
ungroup()
alleles_binned$alleles
paste0(mutation_dataset_spike$prot_pos, collapse = ' resid ')
# Plot
fig2A <- ggplot(mutation_dataset, aes(x=pos, y=n)) +
geom_segment(
aes(x=pos, xend=pos, y=0, yend=n),
color=ifelse(mutation_dataset$n > 20, "orange", "grey"),
linewidth=ifelse(mutation_dataset$n > 20, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset$n > 20, "orange", "grey"),
size=ifelse(mutation_dataset$n > 20, 4, 2)
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
#  geom_text_repel(data=filter(mutation_dataset, n>10),
#                  aes(label=variant_protein_sorted),
#                  max.overlaps = Inf,
#                  min.segment.length = 10, seed = 42, point.padding = 3,
#                  max.time = 1, max.iter = 1e5,
#                  direction = "x",
#                 color='orange'
# ) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(breaks=seq(0, 30000, 5000)) +
ylab("Frequência de Mutações") +
xlab("Posição (Nucleotídeos)")
fig2A
ggsave('Fig2A.png', fig2A, height = 8, width = 26, scale = 1,  units = "cm")
mutation_dataset_spike <-  mutation_dataset %>%
filter(gene == 'S') %>%
mutate(prot_pos = as.numeric(map(variant_protein_sorted, parse_number)))
paste0(mutation_dataset_spike$prot_pos, collapse = ' resid ')
fig2B <- ggplot(mutation_dataset_spike, aes(x=prot_pos, y=n)) +
geom_segment(
aes(x=prot_pos, xend=prot_pos, y=0, yend=n),
color=ifelse(mutation_dataset_spike$n > 20, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 20, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset_spike$n > 20, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 20, 4, 2)
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_text_repel(data=filter(mutation_dataset_spike, n>10 && !(variant_protein_sorted %in% impact_only_loss$variant_protein_sorted)),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
direction = "x",
color='orange'
) +
geom_text_repel(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
aes(label=variant_protein_sorted),
color="red"
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=13),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
plot.margin = unit(c(7,6,5,6), "mm")
) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(limits = c(0, 1273), breaks=seq(0, 1200, 200), expand = c(0,0)) +
ylab("Frequência de Mutações") +
xlab("Resíduos")
fig2B
ggsave('Fig2B.png', fig2B, height = 7, width = 24, scale = 1,  units = "cm")
# Plot
fig2A <- ggplot(mutation_dataset, aes(x=pos, y=n)) +
geom_segment(
aes(x=pos, xend=pos, y=0, yend=n),
color=ifelse(mutation_dataset$n > 20, "orange", "grey"),
linewidth=ifelse(mutation_dataset$n > 20, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset$n > 20, "orange", "grey"),
size=ifelse(mutation_dataset$n > 20, 4, 2)
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
#  geom_text_repel(data=filter(mutation_dataset, n>10),
#                  aes(label=variant_protein_sorted),
#                  max.overlaps = Inf,
#                  min.segment.length = 10, seed = 42, point.padding = 3,
#                  max.time = 1, max.iter = 1e5,
#                  direction = "x",
#                 color='orange'
# ) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),) +
scale_y_continuous(limits = c(0, 25), expand = c(0,0)) +
scale_x_continuous(breaks=seq(0, 30000, 5000)) +
ylab("Frequência de Mutações") +
xlab("Posição (Nucleotídeos)")
fig2A
ggsave('Fig2A.png', fig2A, height = 8, width = 26, scale = 1,  units = "cm")
mutation_dataset_spike <-  mutation_dataset %>%
filter(gene == 'S') %>%
mutate(prot_pos = as.numeric(map(variant_protein_sorted, parse_number)))
paste0(mutation_dataset_spike$prot_pos, collapse = ' resid ')
fig2B <- ggplot(mutation_dataset_spike, aes(x=prot_pos, y=n)) +
geom_segment(
aes(x=prot_pos, xend=prot_pos, y=0, yend=n),
color=ifelse(mutation_dataset_spike$n > 20, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 20, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset_spike$n > 20, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 20, 4, 2)
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_text_repel(data=filter(mutation_dataset_spike, n>20 && !(variant_protein_sorted %in% impact_only_loss$variant_protein_sorted)),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
direction = "x",
color='orange'
) +
geom_text_repel(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
aes(label=variant_protein_sorted),
color="red"
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=13),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
plot.margin = unit(c(7,6,5,6), "mm")
) +
scale_y_continuous(limits = c(0, 35), expand = c(0,0), breaks=seq(0, 35, 5)) +
scale_x_continuous(limits = c(0, 1273), breaks=seq(0, 1200, 200), expand = c(0,0)) +
ylab("Frequência de Mutações") +
xlab("Resíduos")
fig2B
fig2B <- ggplot(mutation_dataset_spike, aes(x=prot_pos, y=n)) +
geom_segment(
aes(x=prot_pos, xend=prot_pos, y=0, yend=n),
color=ifelse(mutation_dataset_spike$n > 20, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 20, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset_spike$n > 20, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 20, 4, 2)
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_text_repel(data=filter(mutation_dataset_spike, n>20 && !(variant_protein_sorted %in% impact_only_loss$variant_protein_sorted)),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
#direction = "x",
color='orange'
) +
geom_text_repel(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
aes(label=variant_protein_sorted),
color="red"
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=13),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
plot.margin = unit(c(7,6,5,6), "mm")
) +
scale_y_continuous(limits = c(0, 35), expand = c(0,0), breaks=seq(0, 35, 5)) +
scale_x_continuous(limits = c(0, 1273), breaks=seq(0, 1200, 200), expand = c(0,0)) +
ylab("Frequência de Mutações") +
xlab("Resíduos")
fig2B
fig2B
ggsave('Fig2B.png', fig2B, height = 7, width = 24, scale = 1,  units = "cm")
# Plot
fig2A <- ggplot(mutation_dataset, aes(x=pos, y=n)) +
geom_segment(
aes(x=pos, xend=pos, y=0, yend=n),
color=ifelse(mutation_dataset$n > 20, "orange", "grey"),
linewidth=ifelse(mutation_dataset$n > 20, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset$n > 20, "orange", "grey"),
size=ifelse(mutation_dataset$n > 20, 4, 2)
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
#  geom_text_repel(data=filter(mutation_dataset, n>10),
#                  aes(label=variant_protein_sorted),
#                  max.overlaps = Inf,
#                  min.segment.length = 10, seed = 42, point.padding = 3,
#                  max.time = 1, max.iter = 1e5,
#                  direction = "x",
#                 color='orange'
# ) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=14),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
axis.ticks.y = element_blank(),) +
scale_y_continuous(limits = c(0, 35), expand = c(0,0), breaks=seq(0, 35, 5)) +
scale_x_continuous(breaks=seq(0, 30000, 5000)) +
ylab("Frequência de Mutações") +
xlab("Posição (Nucleotídeos)")
fig2A
ggsave('Fig2A.png', fig2A, height = 8, width = 26, scale = 1,  units = "cm")
mutation_dataset_spike <-  mutation_dataset %>%
filter(gene == 'S') %>%
mutate(prot_pos = as.numeric(map(variant_protein_sorted, parse_number)))
paste0(mutation_dataset_spike$prot_pos, collapse = ' resid ')
fig2B <- ggplot(mutation_dataset_spike, aes(x=prot_pos, y=n)) +
geom_segment(
aes(x=prot_pos, xend=prot_pos, y=0, yend=n),
color=ifelse(mutation_dataset_spike$n > 20, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 20, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset_spike$n > 20, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 20, 4, 2)
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_text_repel(data=filter(mutation_dataset_spike, n>20 && !(variant_protein_sorted %in% impact_only_loss$variant_protein_sorted)),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e5,
#direction = "x",
color='orange'
) +
geom_text_repel(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
aes(label=variant_protein_sorted),
color="red"
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=13),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
plot.margin = unit(c(7,6,5,6), "mm")
) +
scale_y_continuous(limits = c(0, 35), expand = c(0,0), breaks=seq(0, 35, 5)) +
scale_x_continuous(limits = c(0, 1273), breaks=seq(0, 1200, 200), expand = c(0,0)) +
ylab("Frequência de Mutações") +
xlab("Resíduos")
fig2B
ggsave('Fig2B.png', fig2B, height = 7, width = 24, scale = 1,  units = "cm")
fig2B <- ggplot(mutation_dataset_spike, aes(x=prot_pos, y=n)) +
geom_segment(
aes(x=prot_pos, xend=prot_pos, y=0, yend=n),
color=ifelse(mutation_dataset_spike$n > 20, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 20, 1, 0.7)
) +
geom_point(
color=ifelse(mutation_dataset_spike$n > 20, "orange", "grey"),
size=ifelse(mutation_dataset_spike$n > 20, 4, 2)
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
color="red",
size=2
) +
geom_point(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_gain$variant_protein_sorted),
color="gray30",
size=2
) +
geom_text_repel(data=filter(mutation_dataset_spike, n>20 && !(variant_protein_sorted %in% impact_only_loss$variant_protein_sorted)),
aes(label=variant_protein_sorted),
max.overlaps = Inf,
min.segment.length = 10, seed = 42, point.padding = 3,
max.time = 1, max.iter = 1e6,
#direction = "x",
color='orange'
) +
geom_text_repel(data=filter(mutation_dataset_spike, variant_protein_sorted %in% impact_only_loss$variant_protein_sorted),
aes(label=variant_protein_sorted),
color="red"
) +
theme_classic() +
theme(legend.position = "none",
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=13),
axis.text.y = element_text(size=13),
axis.text.x=element_text(size=13),
plot.margin = unit(c(7,6,5,6), "mm")
) +
scale_y_continuous(limits = c(0, 35), expand = c(0,0), breaks=seq(0, 35, 5)) +
scale_x_continuous(limits = c(0, 1273), breaks=seq(0, 1200, 200), expand = c(0,0)) +
ylab("Frequência de Mutações") +
xlab("Resíduos")
fig2B
ggsave('Fig2B.png', fig2B, height = 7, width = 24, scale = 1,  units = "cm")
ggsave('Fig2B.png', fig2B, height = 7, width = 26, scale = 1,  units = "cm")
